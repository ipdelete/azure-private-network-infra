#!/bin/bash

# ─────────────────────────────────────────────
# 📦 Complete Azure Private Network Infrastructure Deployment
# ─────────────────────────────────────────────
# This script deploys the entire secure Azure infrastructure:
# • Resource Group
# • Virtual Network with NAT Gateway and NSGs  
# • Storage Account with Private Endpoint
# • NFS 4.1 File Share
# • Red Hat Linux VM with automated NFS mounting
# • Azure Bastion Host for secure access

set -e  # Exit on any error

# 🔧 Configuration
LOCATION="eastus2"
BICEP_FILE="main.bicep"
PARAM_FILE="main.parameters.json"
DEPLOYMENT_NAME="complete-infra-deploy-$(date +%s)"

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}🚀 Azure Private Network Infrastructure Deployment${NC}"
echo "═══════════════════════════════════════════════════════════"
echo "📅 Started at: $(date)"
echo "📍 Location: $LOCATION"
echo "📋 Deployment Name: $DEPLOYMENT_NAME"
echo ""

# Check if SSH key is configured
if grep -q "YOUR_SSH_PUBLIC_KEY_HERE" "$PARAM_FILE"; then
    echo -e "${RED}❌ SSH public key not configured!${NC}"
    echo ""
    echo -e "${YELLOW}📝 Please follow these steps:${NC}"
    echo "1. Generate SSH keys (if needed):"
    echo "   cd ../vm/ && ./generate-ssh-key.sh"
    echo ""
    echo "2. Update the SSH public key in $PARAM_FILE:"
    echo "   Replace 'YOUR_SSH_PUBLIC_KEY_HERE' with your actual SSH public key"
    echo ""
    echo "3. Re-run this deployment script"
    echo ""
    exit 1
fi

echo -e "${YELLOW}⚠️  Important Notes:${NC}"
echo "• This deployment will take approximately 15-20 minutes"
echo "• Azure Bastion deployment is the longest step (~10-15 minutes)"
echo "• All resources will be created in a new resource group"
echo "• The VM will automatically mount the NFS share via cloud-init"
echo ""

# Confirmation prompt
read -p "🤔 Continue with deployment? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "❌ Deployment cancelled."
    exit 0
fi

echo ""
echo -e "${BLUE}🚀 Starting deployment...${NC}"

# Run the deployment
az deployment sub create \
  --template-file "$BICEP_FILE" \
  --parameters "$PARAM_FILE" \
  --location "$LOCATION" \
  --name "$DEPLOYMENT_NAME" \
  --verbose

# Check deployment result
if [ $? -eq 0 ]; then
    echo ""
    echo -e "${GREEN}✅ Deployment completed successfully!${NC}"
    echo "═══════════════════════════════════════════════════════════"
    
    # Get deployment outputs
    echo -e "${BLUE}📊 Deployment Summary:${NC}"
    az deployment sub show \
      --name "$DEPLOYMENT_NAME" \
      --query "properties.outputs" \
      --output json | jq -r '
        "🏗️  Resource Group: " + .resourceGroupName.value,
        "🌐 Virtual Network: " + .vnetName.value,
        "💾 Storage Account: " + .storageAccountName.value,
        "📁 NFS Share: " + .nfsShareName.value,
        "💻 Virtual Machine: " + .vmName.value + " (" + .vmPrivateIPAddress.value + ")",
        "🏰 Bastion Host: " + .bastionHostName.value + " (" + .bastionPublicIpAddress.value + ")"
      '
    
    echo ""
    echo -e "${GREEN}🔗 Access Instructions:${NC}"
    echo "1. Navigate to the Azure Portal"
    echo "2. Go to Virtual Machines → vm-pi-localdev"
    echo "3. Click 'Connect' → 'Bastion'"
    echo "4. Use SSH authentication:"
    echo "   • Username: azureuser"
    echo "   • Authentication: SSH Private Key"
    echo "   • Private Key: Use the key generated by vm/generate-ssh-key.sh"
    
    echo ""
    echo -e "${GREEN}📁 NFS Share Access:${NC}"
    STORAGE_NAME=$(az deployment sub show --name "$DEPLOYMENT_NAME" --query "properties.outputs.storageAccountName.value" -o tsv)
    echo "• NFS share automatically mounted at: /mount/$STORAGE_NAME/nfsshare"
    echo "• Test access: ls -la /mount/$STORAGE_NAME/nfsshare"
    echo "• Test write: echo 'Hello' > /mount/$STORAGE_NAME/nfsshare/test.txt"
    
    echo ""
    echo -e "${GREEN}🔍 Validation Commands (run on VM):${NC}"
    echo "• Cloud-init status: sudo cloud-init status"
    echo "• NFS mount check: df -h | grep nfs"
    echo "• View cloud-init logs: sudo cat /var/log/cloud-init.log"
    
    echo ""
    echo -e "${YELLOW}🧹 Cleanup (when done):${NC}"
    echo "• Run: ../scripts/cleanup.sh"
    echo "• Or manually: az group delete --name aet-pi-localdev-es2-tst4 --yes"
    
else
    echo ""
    echo -e "${RED}❌ Deployment failed!${NC}"
    echo ""
    echo -e "${YELLOW}🔍 Troubleshooting steps:${NC}"
    echo "1. Check Azure CLI authentication: az account show"
    echo "2. Verify subscription permissions for resource creation"
    echo "3. Check deployment logs:"
    echo "   az deployment sub show --name $DEPLOYMENT_NAME --query properties.error"
    echo "4. For detailed error information:"
    echo "   az deployment sub list --query \"[?name=='$DEPLOYMENT_NAME']\" --output table"
    
    exit 1
fi

echo ""
echo "📅 Completed at: $(date)"
echo "═══════════════════════════════════════════════════════════"
